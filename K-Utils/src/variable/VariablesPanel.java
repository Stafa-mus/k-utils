package variable;

import database.Database;
import java.awt.Point;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import static java.awt.event.KeyEvent.VK_DELETE;
import static java.awt.event.KeyEvent.VK_F5;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.sql.*;
import java.util.logging.Logger;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author MustafaMohamed
 */
public class VariablesPanel extends javax.swing.JPanel {

    private final VariablesTableModel variablesModel = new VariablesTableModel();
    private final static Logger LOGGER = Logger.getLogger(VariablesPanel.class.getName());
    
    /**
     * Creates new form VariablesPanel
     */
    public VariablesPanel() {
        initComponents();
        jTable1.setModel(variablesModel);
        getVariables();
        jTable1.addKeyListener(new KeyAdapter(){
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == VK_DELETE){
                    onDeleteVariables();
                }
                else if (e.getKeyCode() == VK_F5) {
                    getVariables();
                }
            }
        });
        jTable1.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent mouseEvent) {
                JTable table =(JTable) mouseEvent.getSource();
                Point point = mouseEvent.getPoint();
                if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {
                    onEditVariable();
                }
            }
        });
        jTextFieldSearch.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                getVariables();
            }
            
            @Override
            public void removeUpdate(DocumentEvent e) {
                getVariables();
            }
            
            @Override
            public void changedUpdate(DocumentEvent e) {
                getVariables();
            }
            
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonNewVariable = new javax.swing.JButton();
        jButtonEditVariable = new javax.swing.JButton();
        jButtonDeleteVariables = new javax.swing.JButton();
        jTextFieldSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jButtonNewVariable.setText("New...");
        jButtonNewVariable.setToolTipText("New Command...");
        jButtonNewVariable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewVariableActionPerformed(evt);
            }
        });

        jButtonEditVariable.setText("Edit...");
        jButtonEditVariable.setToolTipText("Edit Command...");
        jButtonEditVariable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditVariableActionPerformed(evt);
            }
        });

        jButtonDeleteVariables.setText("Delete...");
        jButtonDeleteVariables.setToolTipText("Delete Command(s)...");
        jButtonDeleteVariables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteVariablesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonNewVariable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonEditVariable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDeleteVariables)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDeleteVariables)
                    .addComponent(jButtonEditVariable)
                    .addComponent(jButtonNewVariable)
                    .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Value", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(30);
        jTable1.setShowGrid(true);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNewVariableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewVariableActionPerformed
        onNewVariable();
    }//GEN-LAST:event_jButtonNewVariableActionPerformed

    private void jButtonDeleteVariablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteVariablesActionPerformed
        onDeleteVariables();
    }//GEN-LAST:event_jButtonDeleteVariablesActionPerformed

    private void jButtonEditVariableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditVariableActionPerformed
        onEditVariable();
    }//GEN-LAST:event_jButtonEditVariableActionPerformed

    private void onDeleteVariables() {
        if (jTable1.getSelectedRowCount() > 0) {
            var count = jTable1.getSelectedRowCount();
            boolean plural = count > 1;
            var message = "Are you sure you want to delete the selected variable" + (plural ? "s" : "") + "?";
            var title = "Delete Variable" + (plural ? "s" : "");
            var result = JOptionPane.showConfirmDialog(this, message, title, JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                String sql = "DELETE FROM variables WHERE id = ? ";
                try {
                    PreparedStatement stmt = Database.getConnection().prepareStatement(sql);
                    for (int index : jTable1.getSelectedRows()) {
                        int i = jTable1.convertRowIndexToModel(index);
                        var c = variablesModel.getCommandAt(i);
                        stmt.setInt(1, c.id);
                        stmt.executeUpdate();
                    }
                    getVariables();
                    JOptionPane.showMessageDialog(this, "Variable" + (plural ? "s" : "") +  " deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                } catch (IOException | SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(VariablesPanel.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "An error occurred: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }
    
    private void onNewVariable(){
        NewVariableDialog dialog = new NewVariableDialog(null, true);
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
    }
    
    private void getVariables(){
        LOGGER.log(Level.INFO, "Getting commands...");
        variablesModel.clear();
        String search = jTextFieldSearch.getText().trim();
        String sql = "SELECT * FROM variables WHERE `name` LIKE ? OR value LIKE ? OR description LIKE ? "
                + "ORDER BY `name` ASC, value ASC, description ASC ";
        try {
            PreparedStatement stmt = Database.getConnection().prepareStatement(sql);
            String s = "%" + search + "%";
            stmt.setString(1, s);
            stmt.setString(2, s);
            stmt.setString(3, s);
            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                Variable v = new Variable();
                v.value = rs.getString("value");
                v.description = rs.getString("description");
                v.id = rs.getInt("id");
                v.name = rs.getString("name");
                variablesModel.addCommand(v);
            }
        } catch (IOException | SQLException | ClassNotFoundException ex) {
            Logger.getLogger(VariablesPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "An error occurred: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        finally {
            variablesModel.fireTableDataChanged();
        }
    }

    private void onEditVariable() {
        if (jTable1.getSelectedRow() >= 0 && jTable1.getSelectedRowCount() == 1){
            int index = jTable1.convertRowIndexToModel(jTable1.getSelectedRow());
            Variable v = variablesModel.getCommandAt(index);
            EditVariableDialog dialog = new EditVariableDialog(null, true);
            try {
                dialog.setVariable(v.id);
                dialog.setLocationRelativeTo(this);
                dialog.setVisible(true);
                getVariables();
            } catch (IOException | SQLException | ClassNotFoundException ex) {
                Logger.getLogger(VariablesPanel.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "An error occurred: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDeleteVariables;
    private javax.swing.JButton jButtonEditVariable;
    private javax.swing.JButton jButtonNewVariable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
}
